/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Events
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"net/url"
	"strings"
)

// Optional parameters for the method 'FetchSchema'
type FetchSchemaParams struct {
	// The X-Twilio-Catalog-Waiver HTTP request header
	XTwilioCatalogWaiver *string `json:"X-Twilio-Catalog-Waiver,omitempty"`
}

func (params *FetchSchemaParams) SetXTwilioCatalogWaiver(XTwilioCatalogWaiver string) *FetchSchemaParams {
	params.XTwilioCatalogWaiver = &XTwilioCatalogWaiver
	return params
}

// Fetch a specific schema with its nested versions.
func (c *ApiService) FetchSchema(Id string, params *FetchSchemaParams) (*EventsV1Schema, error) {
	path := "/v1/Schemas/{Id}"
	path = strings.Replace(path, "{"+"Id"+"}", Id, -1)

	data := url.Values{}
	headers := make(map[string]interface{})

	if params != nil && params.XTwilioCatalogWaiver != nil {
		headers["X-Twilio-Catalog-Waiver"] = *params.XTwilioCatalogWaiver
	}

	resp, err := c.requestHandler.Get(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()

	ps := &EventsV1Schema{}
	if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
		return nil, err
	}

	return ps, err
}
