/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Context
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package openapi

import (
	"encoding/json"
	"net/url"
)

// Optional parameters for the method 'FetchIdentity'
type FetchIdentityParams struct {
	// Name of the channel used to fetch identities
	ChannelFieldName *string `json:"ChannelFieldName,omitempty"`
	// Value of the channel for which identities are fetched
	ChannelFieldValue *string `json:"ChannelFieldValue,omitempty"`
}

func (params *FetchIdentityParams) SetChannelFieldName(ChannelFieldName string) *FetchIdentityParams {
	params.ChannelFieldName = &ChannelFieldName
	return params
}
func (params *FetchIdentityParams) SetChannelFieldValue(ChannelFieldValue string) *FetchIdentityParams {
	params.ChannelFieldValue = &ChannelFieldValue
	return params
}

// Retrieves a list of identities.
func (c *ApiService) FetchIdentity(params *FetchIdentityParams) (*ContextV1Identity, error) {
	path := "/v1/Identity"

	data := url.Values{}
	headers := make(map[string]interface{})

	if params != nil && params.ChannelFieldName != nil {
		data.Set("ChannelFieldName", *params.ChannelFieldName)
	}
	if params != nil && params.ChannelFieldValue != nil {
		data.Set("ChannelFieldValue", *params.ChannelFieldValue)
	}

	resp, err := c.requestHandler.Get(c.baseURL+path, data, headers)
	if err != nil {
		return nil, err
	}

	defer resp.Body.Close()

	ps := &ContextV1Identity{}
	if err := json.NewDecoder(resp.Body).Decode(ps); err != nil {
		return nil, err
	}

	return ps, err
}
